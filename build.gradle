plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def junitVersion = "5.8.1"
def selenideVersion = "6.19.0"
def allureSelenideVersion = "2.20.1"
def allureRestAssuredVersion = "2.20.1"

allure {
    version = allureSelenideVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureSelenideVersion
    }
}
dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:5.3.0",
            "org.assertj:assertj-core:3.24.2",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.aeonbits.owner:owner:1.0.12",
            "org.slf4j:slf4j-simple:1.7.29",
            "io.qameta.allure:allure-selenide:$allureSelenideVersion",
            "io.qameta.allure:allure-rest-assured:$allureRestAssuredVersion",
            "com.codeborne:selenide:$selenideVersion",
            "com.github.javafaker:javafaker:1.0.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            "org.slf4j:slf4j-simple:1.7.29"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}